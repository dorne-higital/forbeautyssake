{
  "resolvedId": "/Users/danielhorne/Desktop/Business/websites/Github/forbeautyssake/node_modules/@storyblok/nuxt/dist/runtime/composables/useAsyncStoryblok.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useStoryblokApi, useStoryblokBridge } from \"@storyblok/vue\";\nimport { useState, onMounted } from \"#imports\";\nexport const useAsyncStoryblok = async (url, apiOptions = {}, bridgeOptions = {}) => {\n  const uniqueKey = `${JSON.stringify(apiOptions)}${url}`;\n  const story = useState(`${uniqueKey}-state`);\n  const storyblokApiInstance = useStoryblokApi();\n  onMounted(() => {\n    if (story.value && story.value.id) {\n      useStoryblokBridge(\n        story.value.id,\n        (evStory) => story.value = evStory,\n        bridgeOptions\n      );\n    }\n  });\n  if (!story.value) {\n    const { data } = await storyblokApiInstance.get(\n      `cdn/stories/${url}`,\n      apiOptions\n    );\n    story.value = data.story;\n  }\n  ;\n  return story;\n};\n",
      "start": 1712248807485,
      "end": 1712248807759,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712248807759,
      "end": 1712248807759,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712248807759,
      "end": 1712248807759,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712248807759,
      "end": 1712248807759,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712248807759,
      "end": 1712248807759,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712248807760,
      "end": 1712248807760,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712248807760,
      "end": 1712248807763,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useState } from '#app/composables/state';\nimport { onMounted } from 'vue';\nimport { useStoryblokApi, useStoryblokBridge } from \"@storyblok/vue\";\nexport const useAsyncStoryblok = async (url, apiOptions = {}, bridgeOptions = {}) => {\n  const uniqueKey = `${JSON.stringify(apiOptions)}${url}`;\n  const story = useState(`${uniqueKey}-state`);\n  const storyblokApiInstance = useStoryblokApi();\n  onMounted(() => {\n    if (story.value && story.value.id) {\n      useStoryblokBridge(\n        story.value.id,\n        (evStory) => story.value = evStory,\n        bridgeOptions\n      );\n    }\n  });\n  if (!story.value) {\n    const { data } = await storyblokApiInstance.get(\n      `cdn/stories/${url}`,\n      apiOptions\n    );\n    story.value = data.story;\n  }\n  ;\n  return story;\n};\n",
      "start": 1712248807763,
      "end": 1712248807764,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAErE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1712248807764,
      "end": 1712248807764,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712248807764,
      "end": 1712248807764,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712248807764,
      "end": 1712248807764,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712248807764,
      "end": 1712248807764,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712248807764,
      "end": 1712248807765,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712248807765,
      "end": 1712248807765,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712248807765,
      "end": 1712248807765,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712248807765,
      "end": 1712248807765,
      "order": "normal"
    }
  ]
}
